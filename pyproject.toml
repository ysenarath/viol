[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "viol"
dynamic = ["version"]
description = 'An application building platform on top of Flask and HTMLX.'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
    { name = "Yasas Senarath", email = "12231659+ysenarath@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["flask>=3.0.3", "multidict>=6.1.0"]

[project.urls]
Documentation = "https://github.com/ysenarath/viol#readme"
Issues = "https://github.com/ysenarath/viol/issues"
Source = "https://github.com/ysenarath/viol"

[tool.hatch.version]
path = "src/viol/__init__.py"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/viol tests}"

[tool.coverage.run]
source_pkgs = ["viol", "tests"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
viol = ["src/viol", "*/viol/src/viol"]
tests = ["tests", "*/viol/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
    "PT",  # pytest style
    "PL",  # pylint
    "TRY", # tryceratops
]
ignore = [
    "E501", # line too long - let black handle this
]

[tool.ruff.lint.isort]
known-first-party = ["emogen"]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "torch.nn.Parameter",
    "Parameter",
    "torch.tensor",
    "torch.Tensor",
]


[tool.ruff.lint.pylint]
max-args = 50
